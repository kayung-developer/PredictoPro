name: Build, Test, and Deploy Frontend to GitHub Pages

on:
  push:
    branches:
      - main # Or your primary branch, e.g., master
  pull_request:
    branches:
      - main # Or your primary branch

jobs:
  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Updated to v4

      - name: Set up Node.js
        uses: actions/setup-node@v4 # Updated to v4
        with:
          node-version: '18' # Specify your Node.js version

      - name: Install frontend dependencies
        run: npm install
        # If you use package-lock.json, `npm ci` is generally preferred for CI

      - name: Build frontend application
        run: npm run build # Assumes your package.json has this script outputting to 'docs'

      - name: Upload build artifact
        uses: actions/upload-artifact@v4 # Updated to v4
        with:
          name: frontend-build # Name of the artifact
          path: docs/ # Path to the folder to upload

  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest
    needs: build-frontend # Optionally wait for frontend build if needed, or run in parallel
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5 # Updated to v5
        with:
          python-version: '3.10' # Specify your Python version

      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with Flake8 (Optional)
        run: |
          # Stop the build if there are Python syntax errors or undefined names
          pip install flake8 # Install flake8 if not in requirements.txt for CI
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings. Use `flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics` for more lenient checks
          # For strict checking, remove --exit-zero. This will fail the job on linting errors.
          # For now, let's make it non-blocking:
          flake8 . --count --max-complexity=12 --max-line-length=120 --statistics || echo "Flake8 found issues but continuing."

      - name: Run Pytest (Optional)
        run: |
          # pip install pytest # Install pytest if not in requirements.txt for CI
          # pytest # This would run your tests if you have them configured
          echo "Pytest step placeholder - add your tests here."

  deploy-frontend-to-gh-pages:
    name: Deploy Frontend to GitHub Pages
    runs-on: ubuntu-latest
    needs: build-frontend # Only run if build-frontend job succeeds
    # Only run this job if the push is to the 'main' branch and not from a fork
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' 
    steps:
      - name: Download frontend build artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: docs # Download to a 'docs' directory in the workspace

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: docs # The folder the action should deploy.
          clean: true # Automatically remove deleted files from the deploy branch
